-- Step 1: Create Preprocess CTE necessary columns in a WITH clause to reduce repeated CAST operations
WITH preprocessed_data AS (
    SELECT
        environment,
        end_location_lat,
        end_location_lon,
        model,
        make,
        service_type,
        start_m_tmsi,
        CAST(start_time AS DATETIME) AS start_time_dt,
        duration,
        CAST(end_time AS DATETIME) AS end_time_dt,
        start_type,
        end_type,
        final_disposition,
        CAST(start_cell AS STRING) AS start_cell_str,
        start_enb,
        CAST(end_cell AS STRING) AS end_cell_str,
        end_enb,
        s1_release_cause,
        rsrp_dbm,
        rsrq_db,
        end_timing_advance_meters,
        SAFE_CAST(intra_frequency_intra_enb_ho_attempts AS INT64) AS intra_freq_intra_enb_ho_attempts,
        SAFE_CAST(intra_frequency_intra_enb_ho_failures AS INT64) AS intra_freq_intra_enb_ho_failures,
        SAFE_CAST(inter_frequency_intra_enb_ho_attempts AS INT64) AS inter_freq_intra_enb_ho_attempts,
        SAFE_CAST(inter_frequency_intra_enb_ho_failures AS INT64) AS inter_freq_intra_enb_ho_failures,
        SAFE_CAST(intra_frequency_x2_ho_prep_attempts AS INT64) AS intra_freq_x2_ho_prep_attempts,
        SAFE_CAST(intra_frequency_x2_ho_prep_failures AS INT64) AS intra_freq_x2_ho_prep_failures,
        SAFE_CAST(inter_frequency_x2_ho_exec_failures AS INT64) AS inter_freq_x2_ho_exec_failures,
        SAFE_CAST(inter_frequency_x2_ho_prep_attempts AS INT64) AS inter_freq_x2_ho_prep_attempts,
        SAFE_CAST(intra_frequency_x2_ho_exec_failures AS INT64) AS intra_freq_x2_ho_exec_failures,
        SAFE_CAST(inter_frequency_s1_ho_prep_attempts AS INT64) AS inter_freq_s1_ho_prep_attempts,
        SAFE_CAST(inter_frequency_s1_ho_prep_failures AS INT64) AS inter_freq_s1_ho_prep_failures,
        SAFE_CAST(intra_frequency_s1_ho_exec_failures AS INT64) AS intra_freq_s1_ho_exec_failures,
        SAFE_CAST(intra_frequency_s1_ho_prep_attempts AS INT64) AS intra_freq_s1_ho_prep_attempts,
        SAFE_CAST(intra_frequency_s1_ho_prep_failures AS INT64) AS intra_freq_s1_ho_prep_failures,
        SAFE_CAST(inter_frequency_s1_ho_exec_failures AS INT64) AS inter_freq_s1_ho_exec_failures,
        SAFE_CAST(irat_ho_attempts AS INT64) AS irat_ho_attempts,
        last_volte_erab_duration,
        CAST(last_volte_erab_end_time AS DATETIME) AS last_volte_erab_end_time_dt,
        last_volte_erab_release_cause,
        last_volte_erab_start_time,
        SAFE_CAST(volte_erab_with_emergency_arp AS FLOAT64) AS volte_erab_with_emergency_arp,
        initial_nas_request,
        initial_nas_response,
        oem_rrc_setup_cause,
        oem_s1_setup_cause,
        oem_s1_release_cause,
        oem_internal_release_cause,
        release_with_data_lost,
        data_lost,
        SAFE_CAST(mean_cqi AS FLOAT64) AS mean_cqi,
        SAFE_CAST(mac_volume_dl_bytes AS INT64) AS mac_volume_dl_bytes,
        SAFE_CAST(mac_volume_ul_bytes AS INT64) AS mac_volume_ul_bytes,
        SAFE_CAST(pdcp_volume_dl_bytes AS INT64) AS pdcp_volume_dl_bytes,
        SAFE_CAST(pdcp_volume_ul_bytes AS INT64) AS pdcp_volume_ul_bytes,
        SAFE_CAST(mean_pdcp_drb_throughput_dl_kbps AS FLOAT64) AS mean_pdcp_drb_throughput_dl_kbps,
        SAFE_CAST(mean_pdcp_drb_throughput_ul_kbps AS FLOAT64) AS mean_pdcp_drb_throughput_ul_kbps,
        SAFE_CAST(enb_cfcq AS FLOAT64) AS enb_cfcq,
        SAFE_CAST(dl_ttis_ue_scheduled AS INT64) AS dl_ttis_ue_scheduled,
        SAFE_CAST(end_earfcn_dl AS INT64) AS end_earfcn_dl,
        qci_list,
        SAFE_CAST(rrc_re_establishment_failures AS INT64) AS rrc_re_establishment_failures,
        SAFE_CAST(rrc_re_establishment_successes AS INT64) AS rrc_re_establishment_successes,
        SAFE_CAST(num_of_neighbors AS INT64) AS num_of_neighbors,
        SAFE_CAST(n1_rsrp_dbm AS FLOAT64) AS n1_rsrp_dbm,
        SAFE_CAST(n2_rsrp_dbm AS FLOAT64) AS n2_rsrp_dbm,
        SAFE_CAST(n3_rsrp_dbm AS FLOAT64) AS n3_rsrp_dbm,
        SAFE_CAST(pusch_sinr_db AS FLOAT64) AS pusch_sinr_db,
        SAFE_CAST(ue_power_headroom_db AS FLOAT64) AS ue_power_headroom_db,
        SAFE_CAST(ta_distance_meters AS FLOAT64) AS ta_distance_meters,
        SAFE_CAST(intersite_distance_meters AS FLOAT64) AS intersite_distance_meters,
        imei,
        imsi,
        SAFE_CAST(volte_erab_attempts AS INT64) AS volte_erab_attempts,
        SAFE_CAST(volte_erab_drops AS INT64) AS volte_erab_drops,
        volte_erab_duration,
        SAFE_CAST(volte_erab_failed_attempts AS INT64) AS volte_erab_failed_attempts,
        SAFE_CAST(volte_erab_release_attempts AS INT64) AS volte_erab_release_attempts,
        SAFE_CAST(rlc_dl_throughput_kbps AS FLOAT64) AS rlc_dl_throughput_kbps,
        SAFE_CAST(rlc_pdu_dl_retransmit_rate_percentage AS FLOAT64) AS rlc_pdu_dl_retransmit_rate_percentage,
        SAFE_CAST(rlc_pdu_dl_retransmitted_volume_bytes AS FLOAT64) AS rlc_pdu_dl_retransmitted_volume_bytes,
        SAFE_CAST(rlc_pdu_dl_volume_bytes AS FLOAT64) AS rlc_pdu_dl_volume_bytes,
        SAFE_CAST(rlc_pdu_ul_volume_bytes AS FLOAT64) AS rlc_pdu_ul_volume_bytes,
        SAFE_CAST(rlc_sdu_ul_volume_kbytes AS FLOAT64) AS rlc_sdu_ul_volume_kbytes,
        SAFE_CAST(rlc_ul_throughput_kbps AS FLOAT64) AS rlc_ul_throughput_kbps,
        mobile_number,
        SAFE_CAST(mean_ul_sinr_db AS FLOAT64) AS mean_ul_sinr_db,
        vendor,
        confidence,
        nr_serving_cell,
        nr_serving_pci,
        nr_serving_arfcn,
        en_dc_duration,
        en_dc_duration_rate_percentage,
        maximum_number_of_carrier_components,
        average_number_of_carrier_components,
        en_dc_sgnb_addition_attempts,
        en_dc_sgnb_addition_failures,
        en_dc_sgnb_drops,
        last_5g_en_dc_release_cause,
        en_dc_downlink_volume_bytes,
        en_dc_uplink_volume_bytes,
        CAST(time_of_last_rrc_measurement_reports_with_5g_nr_cell AS DATETIME) AS time_of_last_rrc_measurement_reports_with_5g_nr_cell_dt,
        nr_last_measurement_cell,
        nr_last_measurement_pci,
        nr_last_measurement_arfcn,
        SAFE_CAST(nr_rsrp_dbm AS FLOAT64) AS nr_rsrp_dbm,
        SAFE_CAST(nr_rsrq_db AS FLOAT64) AS nr_rsrq_db,
        SAFE_CAST(nr_dl_sinr_db AS FLOAT64) AS nr_dl_sinr_db,
        en_dc_sgnb_change_attempts,
        en_dc_sgnb_change_failures,
        en_dc_sgnb_modification_attempts,
        en_dc_sgnb_modification_failures,
        radio_type,
        call_release_cause,
        SAFE_CAST(s1_u_ul_data_volume AS FLOAT64) AS s1_u_ul_data_volume_bytes,
        SAFE_CAST(s1_u_dl_data_volume AS FLOAT64) AS s1_u_dl_data_volume_bytes,
        SAFE_CAST(mean_uplink_ip_throughput_kbps AS FLOAT64) AS mean_uplink_ip_throughput_kbps,
        SAFE_CAST(mean_downlink_ipthroughput_kbps AS FLOAT64) AS mean_downlink_ipthroughput_kbps,
        call_type,
        last_rrc_reestablishment_case,
        last_cqi,
        csl_event,
        call_segment_duration,
        last_ue_tx_power,
        csfb,
        csfb_result,
        csfb_type,
        ue_5g_capable,
        nr_final_disposition,
        lte_carrier_aggregation_service_time,
        nr_carrier_aggregation_service_time,
        SAFE_CAST(intra_frequency_x2_ho_exec_attempts AS INT64) AS intra_freq_x2_ho_exec_attempts,
        SAFE_CAST(inter_frequency_x2_ho_exec_attempts AS INT64) AS inter_freq_x2_ho_exec_attempts,
        SAFE_CAST(rrc_re_establishment_attempts AS INT64) AS rrc_re_establishment_attempts,
        nr_scg_failure_type,
        SAFE_CAST(mean_mac_throughput_ul_kbps AS FLOAT64) AS mean_mac_throughput_ul_kbps,
        SAFE_CAST(mean_mac_throughput_dl_kbps AS FLOAT64) AS mean_mac_throughput_dl_kbps,
        composite_call,
        fragment_id,
        global_id,
        erab_drops,
        nr_n1_pci,
        nr_n1_cell,
        SAFE_CAST(nr_n1_rsrp_dbm AS FLOAT64) AS nr_n1_rsrp_dbm,
        SAFE_CAST(nr_n1_dl_sinr_db AS FLOAT64) AS nr_n1_dl_sinr_db,
        nr_n2_pci,
        nr_n2_cell,
        SAFE_CAST(nr_n2_rsrp_dbm AS FLOAT64) AS nr_n2_rsrp_dbm,
        SAFE_CAST(nr_n2_dl_sinr_db AS FLOAT64) AS nr_n2_dl_sinr_db,
        SAFE_CAST(average_number_of_nr_carrier_components AS FLOAT64) AS avg_num_of_nr_carrier_components,
        nr_scell_list,
        nr_scell_arfcn_list,
        lte_scell_list,
        lte_scell_arfcn_list,
        lte_carrier_aggregation_service_rate_percentage,
        erab_attempts,
        erab_failed_attempts,
        erab_normal_releases,
        erab_release_attempts,
        erab_successes,
        substring(lpad(end_enb,6,'0'),0,3) AS lte_mkt,
        lpad(SAFE_CAST(MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) AS STRING),3,'0') AS lte_base_mkt,
        CASE
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (152,153,154,155,156,157,158,159,161,162,163) THEN 'CARTN'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (120,121,122,123,124,125,126,127,180,181,182,185,186) THEN 'CGC'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (131,132,133,134,135,136,137,138,139,140,184) THEN 'CTX'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (142,143,144,145,146,147,148,149,151) THEN 'FL'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (168,169,170,171,172,173,174,175,176,177) THEN 'GA'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (188,189,190,191,192,193,195,196,197,198) THEN 'GP'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (202,203,204,206,207,208,209,210) THEN 'ILWI'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (224,225,226,227,228,229,230,231,232,233,234) THEN 'MINKY'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (10,11,12,13,14,15,16,17,214,215,216,217,218,219,220) THEN 'MTPL'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (56,57,58,59,60,61,62,64,65,66,68) THEN 'NE'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (78,79,80,81,82,83,84,85) THEN 'NYM'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (30,31,32,33,35,36,37,38) THEN 'NCAL'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (0,1,2,3,5,6,7,8) THEN 'PNW'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (241,242,243,244,245,246,247,250,251,252,253,254,255) THEN 'OHPA'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (40,41,43,44,45,47,49,51,52,53,54) THEN 'SCAL'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (20,21,22,23,24,25,26,27) THEN 'SW'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (86,87,88,89,90,91,96,97,98,99,100,101,102) THEN 'PTS'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (70,71,72,73,74) THEN 'UNY'
            WHEN MOD(SAFE_CAST(substring(lpad(end_enb,6,'0'),0,3) AS NUMERIC),300) IN (106,107,109,110,111,112,113,114,115,116,117) THEN 'WBV'
            ELSE '-999'
        END AS submkt_new,
        CASE
            WHEN duration IS NULL OR duration ='' OR duration ='< 0' THEN NULL
            WHEN array_length(split(duration,':')) = 3 THEN SAFE_CAST(split(duration,':')[OFFSET(0)] AS INT64) * 3600 + SAFE_CAST(split(duration,':')[OFFSET(1)] AS INT64) * 60 + SAFE_CAST(split(duration,':')[OFFSET(2)] AS FLOAT64)
            WHEN array_length(split(duration,':')) = 2 THEN SAFE_CAST(split(duration,':')[OFFSET(0)] AS INT64) * 60 + SAFE_CAST(split(duration,':')[OFFSET(1)] AS FLOAT64)
            WHEN array_length(split(duration,':')) = 1 THEN SAFE_CAST(split(duration,':')[OFFSET(0)] AS FLOAT64)
            ELSE NULL
        END AS duration_seconds,
        CASE
            WHEN call_segment_duration IS NULL OR call_segment_duration ='' OR call_segment_duration ='< 0' THEN NULL
            WHEN array_length(split(call_segment_duration,':')) = 3 THEN SAFE_CAST(split(call_segment_duration,':')[OFFSET(0)] AS INT64) * 3600 + SAFE_CAST(split(call_segment_duration,':')[OFFSET(1)] AS INT64) * 60 + SAFE_CAST(split(call_segment_duration,':')[OFFSET(2)] AS FLOAT64)
            WHEN array_length(split(call_segment_duration,':')) = 2 THEN SAFE_CAST(split(call_segment_duration,':')[OFFSET(0)] AS INT64) * 60 + SAFE_CAST(split(call_segment_duration,':')[OFFSET(1)] AS FLOAT64)
            WHEN array_length(split(call_segment_duration,':')) = 1 THEN SAFE_CAST(split(call_segment_duration,':')[OFFSET(0)] AS FLOAT64)
            ELSE NULL
        END AS call_segment_duration_seconds,
        CASE
            WHEN en_dc_duration IS NULL OR en_dc_duration ='' OR en_dc_duration ='< 0' THEN NULL
            WHEN array_length(split(en_dc_duration,':')) = 3 THEN SAFE_CAST(split(en_dc_duration,':')[OFFSET(0)] AS INT64) * 3600 + SAFE_CAST(split(en_dc_duration,':')[OFFSET(1)] AS INT64) * 60 + SAFE_CAST(split(en_dc_duration,':')[OFFSET(2)] AS FLOAT64)
            WHEN array_length(split(en_dc_duration,':')) = 2 THEN SAFE_CAST(split(en_dc_duration,':')[OFFSET(0)] AS INT64) * 60 + SAFE_CAST(split(en_dc_duration,':')[OFFSET(1)] AS FLOAT64)
            WHEN array_length(split(en_dc_duration,':')) = 1 THEN SAFE_CAST(split(en_dc_duration,':')[OFFSET(0)] AS FLOAT64)
            ELSE NULL
        END AS en_dc_duration_seconds,
        CASE
            WHEN volte_erab_duration IS NULL OR volte_erab_duration ='' OR volte_erab_duration ='< 0' THEN NULL
            WHEN array_length(split(volte_erab_duration,':')) = 3 THEN SAFE_CAST(split(volte_erab_duration,':')[OFFSET(0)] AS INT64) * 3600 + SAFE_CAST(split(volte_erab_duration,':')[OFFSET(1)] AS INT64) * 60 + SAFE_CAST(split(volte_erab_duration,':')[OFFSET(2)] AS FLOAT64)
            WHEN array_length(split(volte_erab_duration,':')) = 2 THEN SAFE_CAST(split(volte_erab_duration,':')[OFFSET(0)] AS INT64) * 60 + SAFE_CAST(split(volte_erab_duration,':')[OFFSET(1)] AS FLOAT64)
            WHEN array_length(split(volte_erab_duration,':')) = 1 THEN SAFE_CAST(split(volte_erab_duration,':')[OFFSET(0)] AS FLOAT64)
            ELSE NULL
        END AS volte_erab_duration_seconds,
        CASE
            WHEN last_volte_erab_duration IS NULL OR last_volte_erab_duration ='' OR last_volte_erab_duration ='< 0' THEN NULL
            WHEN array_length(split(last_volte_erab_duration,':')) = 3 THEN SAFE_CAST(split(last_volte_erab_duration,':')[OFFSET(0)] AS INT64) * 3600 + SAFE_CAST(split(last_volte_erab_duration,':')[OFFSET(1)] AS INT64) * 60 + SAFE_CAST(split(last_volte_erab_duration,':')[OFFSET(2)] AS FLOAT64)
            WHEN array_length(split(last_volte_erab_duration,':')) = 2 THEN SAFE_CAST(split(last_volte_erab_duration,':')[OFFSET(0)] AS INT64) * 60 + SAFE_CAST(split(last_volte_erab_duration,':')[OFFSET(1)] AS FLOAT64)
            WHEN array_length(split(last_volte_erab_duration,':')) = 1 THEN SAFE_CAST(split(last_volte_erab_duration,':')[OFFSET(0)] AS FLOAT64)
            ELSE NULL
        END AS last_volte_erab_duration_seconds,
        `carto-os`.carto.H3_TOPARENT(`carto-os`.carto.H3_FROMGEOGPOINT(ST_GEOGPOINT(end_location_lon,end_location_lat),9), 6) AS h3_06,
        `carto-os`.carto.H3_TOPARENT(`carto-os`.carto.H3_FROMGEOGPOINT(ST_GEOGPOINT(end_location_lon,end_location_lat),9), 7) AS h3_07,
        `carto-os`.carto.H3_TOPARENT(`carto-os`.carto.H3_FROMGEOGPOINT(ST_GEOGPOINT(end_location_lon,end_location_lat),9), 8) AS h3_08,
        `carto-os`.carto.H3_FROMGEOGPOINT(ST_GEOGPOINT(end_location_lon,end_location_lat),9) AS h3_09,
        `${truecall_tgt_project_id}.${truecall_tgt_dataset_name}.LLtoMGRS`(end_location_lat, end_location_lon) AS mgrs_1m,
        CASE 
            WHEN LENGTH(nr_serving_cell) > 6 THEN '5G' 
            ELSE '4G' 
        END AS conn_tech_type,
        CASE 
            WHEN LENGTH(nr_serving_cell) > 6 THEN 
                CASE
                    WHEN nr_last_measurement_arfcn IN (0,1,677,877,2410,2560) OR nr_last_measurement_arfcn BETWEEN 174000 AND 435000 THEN 'NW'
                    WHEN nr_last_measurement_arfcn BETWEEN 648000 AND 659999 THEN 'CB'
                    WHEN nr_last_measurement_arfcn BETWEEN 2071000 AND 2269999 THEN 'mmW'
                    ELSE 'LTE' 
                END
            ELSE 'LTE' 
        END AS conn_tech_type_desc,
        CASE 
            WHEN LENGTH(nr_serving_cell) > 6 THEN SAFE_CAST(SAFE_CAST((SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER)/16384) AS INTEGER) AS STRING)
            ELSE SAFE_CAST(end_enb AS STRING) 
        END AS enb_gnb_id,
        CASE 
            WHEN LENGTH(nr_serving_cell) > 6 THEN 
                CASE 
                    WHEN SAFE_CAST(MOD(SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER),16384) AS INTEGER) >= 10 THEN SAFE_CAST(FLOOR(SAFE_CAST(MOD(SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER),16384) AS INTEGER)/10) AS STRING)
                    ELSE SAFE_CAST(SAFE_CAST(MOD(SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER),16384) AS INTEGER) AS STRING)
                END
            ELSE 
                CASE 
                    WHEN MOD(SAFE_CAST(RIGHT(SAFE_CAST(start_cell AS STRING),8) AS INTEGER),256) >= 10 THEN SAFE_CAST(FLOOR(MOD(SAFE_CAST(RIGHT(SAFE_CAST(start_cell AS STRING),8) AS INTEGER),256)/10) AS STRING)
                    ELSE SAFE_CAST(MOD(SAFE_CAST(RIGHT(SAFE_CAST(start_cell AS STRING),8) AS INTEGER),256)  AS STRING)
                END 
        END AS start_cell_sector,
        CASE 
            WHEN LENGTH(nr_serving_cell) > 6 THEN nr_last_measurement_arfcn 
            ELSE SAFE_CAST(end_earfcn_dl AS INT) 
        END AS channel,
        CASE 
            WHEN LENGTH(nr_serving_cell) > 6 THEN 
                CASE 
                    WHEN SAFE_CAST(MOD(SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER),16384) AS INTEGER) >= 10 THEN SAFE_CAST(FLOOR(SAFE_CAST(MOD(SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER),16384) AS INTEGER)/10) AS STRING)
                    ELSE SAFE_CAST(SAFE_CAST(MOD(SAFE_CAST(RIGHT(nr_serving_cell,10) AS INTEGER),16384) AS INTEGER) AS STRING)
                END
            ELSE 
                CASE 
                    WHEN MOD(SAFE_CAST(RIGHT(SAFE_CAST(end_cell AS STRING),8) AS INTEGER),256) >= 10 THEN SAFE_CAST(FLOOR(MOD(SAFE_CAST(RIGHT(SAFE_CAST(end_cell AS STRING),8) AS INTEGER),256)/10) AS STRING)
                    ELSE SAFE_CAST(MOD(SAFE_CAST(RIGHT(SAFE_CAST(end_cell AS STRING),8) AS INTEGER),256) AS STRING)
                END 
        END AS end_cell_sector,
        SAFE_CAST((MOD((CASE 
            WHEN MOD(SAFE_CAST(RIGHT(SAFE_CAST(end_cell AS STRING),8) AS INTEGER),256) >= 10 THEN MOD(SAFE_CAST(RIGHT(SAFE_CAST(end_cell AS STRING),8) AS INTEGER),256)
            ELSE MOD(SAFE_CAST(RIGHT(SAFE_CAST(end_cell AS STRING),8) AS INTEGER),256) * 10 
        END),10) + 1) AS STRING) AS new_carr,
        CAST(CAST(end_time AS DATETIME) AS DATE) AS trans_dt,
        FORMAT_TIME("%H", EXTRACT(TIME FROM TIMESTAMP(end_time))) AS hr,
        submkt,
        CAST(process_date AS DATETIME) AS process_dt
    FROM `${truecall_src_project_id}.${truecall_src_dataset_name}.${truecall_source_tblname}`
    WHERE trans_dt >= CAST(trans_date AS DATE) AND arrival = arrival_dt_hr
)

-- Step 2: Insert data in batches
INSERT INTO `${truecall_tgt_project_id}.${truecall_tgt_dataset_name}.${truecall_target_tblname}` (
    environment,
    end_location_lat,
    end_location_lon,
    model,
    make,
    service_type,
    start_m_tmsi,
    start_time,
    duration,
    end_time,
    start_type,
    end_type,
    final_disposition,
    start_cell,
    start_enb,
    end_cell,
    end_enb,
    s1_release_cause,
    rsrp_dbm,
    rsrq_db,
    end_timing_advance_meters,
    intra_frequency_intra_enb_ho_attempts,
    intra_frequency_intra_enb_ho_failures,
    inter_frequency_intra_enb_ho_attempts,
    inter_frequency_intra_enb_ho_failures,
    intra_frequency_x2_ho_prep_attempts,
    intra_frequency_x2_ho_prep_failures,
    inter_frequency_x2_ho_exec_failures,
    inter_frequency_x2_ho_prep_attempts,
    intra_frequency_x2_ho_exec_failures,
    inter_frequency_s1_ho_prep_attempts,
    inter_frequency_s1_ho_prep_failures,
    intra_frequency_s1_ho_exec_failures,
    intra_frequency_s1_ho_prep_attempts,
    intra_frequency_s1_ho_prep_failures,
    inter_frequency_s1_ho_exec_failures,
    irat_ho_attempts,
    last_volte_erab_duration,
    last_volte_erab_end_time,
    last_volte_erab_release_cause,
    last_volte_erab_start_time,
    volte_erab_with_emergency_arp,
    initial_nas_request,
    initial_nas_response,
    oem_rrc_setup_cause,
    oem_s1_setup_cause,
    oem_s1_release_cause,
    oem_internal_release_cause,
    release_with_data_lost,
    data_lost,
    mean_cqi,
    mac_volume_dl_bytes,
    mac_volume_ul_bytes,
    pdcp_volume_dl_bytes,
    pdcp_volume_ul_bytes,
    mean_pdcp_drb_throughput_dl_kbps,
    mean_pdcp_drb_throughput_ul_kbps,
    enb_cfcq,
    dl_ttis_ue_scheduled,
    end_earfcn_dl,
    qci_list,
    rrc_re_establishment_failures,
    rrc_re_establishment_successes,
    num_of_neighbors,
    n1_rsrp_dbm,
    n2_rsrp_dbm,
    n3_rsrp_dbm,
    pusch_sinr_db,
    ue_power_headroom_db,
    ta_distance_meters,
    intersite_distance_meters,
    imei,
    imsi,
    volte_erab_attempts,
    volte_erab_drops,
    volte_erab_duration,
    volte_erab_failed_attempts,
    volte_erab_release_attempts,
    rlc_dl_throughput_kbps,
    rlc_pdu_dl_retransmit_rate_percentage,
    rlc_pdu_dl_retransmitted_volume_bytes,
    rlc_pdu_dl_volume_bytes,
    rlc_pdu_ul_volume_bytes,
    rlc_sdu_ul_volume_kbytes,
    rlc_ul_throughput_kbps,
    mobile_number,
    mean_ul_sinr_db,
    vendor,
    confidence,
    nr_serving_cell,
    nr_serving_pci,
    nr_serving_arfcn,
    en_dc_duration,
    en_dc_duration_rate_percentage,
    maximum_number_of_carrier_components,
    average_number_of_carrier_components,
    en_dc_sgnb_addition_attempts,
    en_dc_sgnb_addition_failures,
    en_dc_sgnb_drops,
    last_5g_en_dc_release_cause,
    en_dc_downlink_volume_bytes,
    en_dc_uplink_volume_bytes,
    time_of_last_rrc_measurement_reports_with_5g_nr_cell,
    nr_last_measurement_cell,
    nr_last_measurement_pci,
    nr_last_measurement_arfcn,
    nr_rsrp_dbm,
    nr_rsrq_db,
    nr_dl_sinr_db,
    en_dc_sgnb_change_attempts,
    en_dc_sgnb_change_failures,
    en_dc_sgnb_modification_attempts,
    en_dc_sgnb_modification_failures,
    radio_type,
    call_release_cause,
    s1_u_ul_data_volume_bytes,
    s1_u_dl_data_volume_bytes,
    mean_uplink_ip_throughput_kbps,
    mean_downlink_ipthroughput_kbps,
    call_type,
    last_rrc_reestablishment_case,
    last_cqi,
    csl_event,
    call_segment_duration,
    last_ue_tx_power,
    csfb,
    csfb_result,
    csfb_type,
    ue_5g_capable,
    nr_final_disposition,
    lte_carrier_aggregation_service_time,
    nr_carrier_aggregation_service_time,
    intra_frequency_x2_ho_exec_attempts,
    inter_frequency_x2_ho_exec_attempts,
    rrc_re_establishment_attempts,
    nr_scg_failure_type,
    mean_mac_throughput_ul_kbps,
    mean_mac_throughput_dl_kbps,
    composite_call,
    fragment_id,
    global_id,
    erab_drops,
    nr_n1_pci,
    nr_n1_cell,
    nr_n1_rsrp_dbm,
    nr_n1_dl_sinr_db,
    nr_n2_pci,
    nr_n2_cell,
    nr_n2_rsrp_dbm,
    nr_n2_dl_sinr_db,
    average_number_of_nr_carrier_components,
    nr_scell_list,
    nr_scell_arfcn_list,
    lte_scell_list,
    lte_scell_arfcn_list,
    lte_carrier_aggregation_service_rate_percentage,
    erab_attempts,
    erab_failed_attempts,
    erab_normal_releases,
    erab_release_attempts,
    erab_successes,
    lte_mkt,
    lte_base_mkt,
    submkt,
    duration_seconds,
    call_segment_duration_seconds,
    en_dc_duration_seconds,
    volte_erab_duration_seconds,
    last_volte_erab_duration_seconds,
    h3_06,
    h3_07,
    h3_08,
    h3_09,
    mgrs_1m,
    conn_tech_type,
    conn_tech_type_desc,
    enb_gnb_id,
    start_cell_sector,
    channel,
    end_cell_sector,
    new_carr,
    trans_dt,
    hr,
    submkt_fname,
    process_dt
)
SELECT
    environment,
    end_location_lat,
    end_location_lon,
    model,
    make,
    service_type,
    start_m_tmsi,
    start_time_dt,
    duration,
    end_time_dt,
    start_type,
    end_type,
    final_disposition,
    start_cell_str,
    start_enb,
    end_cell_str,
    end_enb,
    s1_release_cause,
    rsrp_dbm,
    rsrq_db,
    end_timing_advance_meters,
    intra_freq_intra_enb_ho_attempts,
    intra_freq_intra_enb_ho_failures,
    inter_freq_intra_enb_ho_attempts,
    inter_freq_intra_enb_ho_failures,
    intra_freq_x2_ho_prep_attempts,
    intra_freq_x2_ho_prep_failures,
    inter_freq_x2_ho_exec_failures,
    inter_freq_x2_ho_prep_attempts,
    intra_freq_x2_ho_exec_failures,
    inter_freq_s1_ho_prep_attempts,
    inter_freq_s1_ho_prep_failures,
    intra_freq_s1_ho_exec_failures,
    intra_freq_s1_ho_prep_attempts,
    intra_freq_s1_ho_prep_failures,
    inter_freq_s1_ho_exec_failures,
    irat_ho_attempts,
    last_volte_erab_duration,
    last_volte_erab_end_time_dt,
    last_volte_erab_release_cause,
    last_volte_erab_start_time,
    volte_erab_with_emergency_arp,
    initial_nas_request,
    initial_nas_response,
    oem_rrc_setup_cause,
    oem_s1_setup_cause,
    oem_s1_release_cause,
    oem_internal_release_cause,
    release_with_data_lost,
    data_lost,
    mean_cqi,
    mac_volume_dl_bytes,
    mac_volume_ul_bytes,
    pdcp_volume_dl_bytes,
    pdcp_volume_ul_bytes,
    mean_pdcp_drb_throughput_dl_kbps,
    mean_pdcp_drb_throughput_ul_kbps,
    enb_cfcq,
    dl_ttis_ue_scheduled,
    end_earfcn_dl,
    qci_list,
    rrc_re_establishment_failures,
    rrc_re_establishment_successes,
    num_of_neighbors,
    n1_rsrp_dbm,
    n2_rsrp_dbm,
    n3_rsrp_dbm,
    pusch_sinr_db,
    ue_power_headroom_db,
    ta_distance_meters,
    intersite_distance_meters,
    imei,
    imsi,
    volte_erab_attempts,
    volte_erab_drops,
    volte_erab_duration,
    volte_erab_failed_attempts,
    volte_erab_release_attempts,
    rlc_dl_throughput_kbps,
    rlc_pdu_dl_retransmit_rate_percentage,
    rlc_pdu_dl_retransmitted_volume_bytes,
    rlc_pdu_dl_volume_bytes,
    rlc_pdu_ul_volume_bytes,
    rlc_sdu_ul_volume_kbytes,
    rlc_ul_throughput_kbps,
    mobile_number,
    mean_ul_sinr_db,
    vendor,
    confidence,
    nr_serving_cell,
    nr_serving_pci,
    nr_serving_arfcn,
    en_dc_duration,
    en_dc_duration_rate_percentage,
    maximum_number_of_carrier_components,
    average_number_of_carrier_components,
    en_dc_sgnb_addition_attempts,
    en_dc_sgnb_addition_failures,
    en_dc_sgnb_drops,
    last_5g_en_dc_release_cause,
    en_dc_downlink_volume_bytes,
    en_dc_uplink_volume_bytes,
    time_of_last_rrc_measurement_reports_with_5g_nr_cell_dt,
    nr_last_measurement_cell,
    nr_last_measurement_pci,
    nr_last_measurement_arfcn,
    nr_rsrp_dbm,
    nr_rsrq_db,
    nr_dl_sinr_db,
    en_dc_sgnb_change_attempts,
    en_dc_sgnb_change_failures,
    en_dc_sgnb_modification_attempts,
    en_dc_sgnb_modification_failures,
    radio_type,
    call_release_cause,
    s1_u_ul_data_volume_bytes,
    s1_u_dl_data_volume_bytes,
    mean_uplink_ip_throughput_kbps,
    mean_downlink_ipthroughput_kbps,
    call_type,
    last_rrc_reestablishment_case,
    last_cqi,
    csl_event,
    call_segment_duration,
    last_ue_tx_power,
    csfb,
    csfb_result,
    csfb_type,
    ue_5g_capable,
    nr_final_disposition,
    lte_carrier_aggregation_service_time,
    nr_carrier_aggregation_service_time,
    intra_freq_x2_ho_exec_attempts,
    inter_freq_x2_ho_exec_attempts,
    rrc_re_establishment_attempts,
    nr_scg_failure_type,
    mean_mac_throughput_ul_kbps,
    mean_mac_throughput_dl_kbps,
    composite_call,
    fragment_id,
    global_id,
    erab_drops,
    nr_n1_pci,
    nr_n1_cell,
    nr_n1_rsrp_dbm,
    nr_n1_dl_sinr_db,
    nr_n2_pci,
    nr_n2_cell,
    nr_n2_rsrp_dbm,
    nr_n2_dl_sinr_db,
    avg_num_of_nr_carrier_components,
    nr_scell_list,
    nr_scell_arfcn_list,
    lte_scell_list,
    lte_scell_arfcn_list,
    lte_carrier_aggregation_service_rate_percentage,
    erab_attempts,
    erab_failed_attempts,
    erab_normal_releases,
    erab_release_attempts,
    erab_successes,
    lte_mkt,
    lte_base_mkt,
    submkt,
    duration_seconds,
    call_segment_duration_seconds,
    en_dc_duration_seconds,
    volte_erab_duration_seconds,
    last_volte_erab_duration_seconds,
    h3_06,
    h3_07,
    h3_08,
    h3_09,
    mgrs_1m,
    conn_tech_type,
    conn_tech_type_desc,
    enb_gnb_id,
    start_cell_sector,
    channel,
    end_cell_sector,
    new_carr,
    trans_dt,
    hr,
    submkt_fname,
    process_dt
FROM preprocessed_data;
